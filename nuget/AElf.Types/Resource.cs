// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: resource.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Kernel {

  /// <summary>Holder for reflection information generated from resource.proto</summary>
  public static partial class ResourceReflection {

    #region Descriptor
    /// <summary>File descriptor for resource.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5yZXNvdXJjZS5wcm90byJGChdSZXNvdXJjZVR5cGVCYWxhbmNlUGFpchIb",
            "CgRUeXBlGAEgASgOMg0uUmVzb3VyY2VUeXBlEg4KBkFtb3VudBgCIAEoBCpE",
            "CgxSZXNvdXJjZVR5cGUSGQoVVW5kZWZpbmVkUmVzb3VyY2VUeXBlEAASBwoD",
            "UmFtEAESBwoDQ3B1EAISBwoDTmV0EANCDqoCC0FFbGYuS2VybmVsYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Kernel.ResourceType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.ResourceTypeBalancePair), global::AElf.Kernel.ResourceTypeBalancePair.Parser, new[]{ "Type", "Amount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResourceType {
    [pbr::OriginalName("UndefinedResourceType")] UndefinedResourceType = 0,
    [pbr::OriginalName("Ram")] Ram = 1,
    [pbr::OriginalName("Cpu")] Cpu = 2,
    [pbr::OriginalName("Net")] Net = 3,
  }

  #endregion

  #region Messages
  public sealed partial class ResourceTypeBalancePair : pb::IMessage<ResourceTypeBalancePair> {
    private static readonly pb::MessageParser<ResourceTypeBalancePair> _parser = new pb::MessageParser<ResourceTypeBalancePair>(() => new ResourceTypeBalancePair());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceTypeBalancePair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.ResourceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceTypeBalancePair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceTypeBalancePair(ResourceTypeBalancePair other) : this() {
      type_ = other.type_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceTypeBalancePair Clone() {
      return new ResourceTypeBalancePair(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::AElf.Kernel.ResourceType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.ResourceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceTypeBalancePair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceTypeBalancePair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Amount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceTypeBalancePair other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::AElf.Kernel.ResourceType) input.ReadEnum();
            break;
          }
          case 16: {
            Amount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
