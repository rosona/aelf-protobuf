// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Kernel {

  /// <summary>Holder for reflection information generated from auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphdXRoLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "Ggxjb21tb24ucHJvdG8aDGtlcm5lbC5wcm90byKHAQoNQXV0aG9yaXphdGlv",
            "bhIhCg9NdWx0aVNpZ0FjY291bnQYASABKAsyCC5BZGRyZXNzEhoKEkV4ZWN1",
            "dGlvblRocmVzaG9sZBgCIAEoDRIZChFQcm9wb3NlclRocmVzaG9sZBgDIAEo",
            "DRIcCglSZXZpZXdlcnMYBCADKAsyCS5SZXZpZXdlciIqCghSZXZpZXdlchIO",
            "CgZQdWJLZXkYASABKAwSDgoGV2VpZ2h0GAIgASgNIp4BCghQcm9wb3NhbBIh",
            "Cg9NdWx0aVNpZ0FjY291bnQYASABKAsyCC5BZGRyZXNzEgwKBE5hbWUYAiAB",
            "KAkSDwoHVHhuRGF0YRgDIAEoDBITCgtFeHBpcmVkVGltZRgEIAEoARIfCgZT",
            "dGF0dXMYBSABKA4yDy5Qcm9wb3NhbFN0YXR1cxIaCghQcm9wb3NlchgGIAEo",
            "CzIILkFkZHJlc3MiRQoIQXBwcm92ZWQSGwoMUHJvcG9zYWxIYXNoGAEgASgL",
            "MgUuSGFzaBIcCglBcHByb3ZhbHMYBSADKAsyCS5BcHByb3ZhbCI6CghBcHBy",
            "b3ZhbBIbCgxQcm9wb3NhbEhhc2gYASABKAsyBS5IYXNoEhEKCVNpZ25hdHVy",
            "ZRgCIAEoDCo8Cg5Qcm9wb3NhbFN0YXR1cxIPCgtUb0JlRGVjaWRlZBAAEgsK",
            "B0RlY2lkZWQQARIMCghSZWxlYXNlZBACQg6qAgtBRWxmLktlcm5lbGIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::AElf.Common.CommonReflection.Descriptor, global::AElf.Kernel.KernelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Kernel.ProposalStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Authorization), global::AElf.Kernel.Authorization.Parser, new[]{ "MultiSigAccount", "ExecutionThreshold", "ProposerThreshold", "Reviewers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Reviewer), global::AElf.Kernel.Reviewer.Parser, new[]{ "PubKey", "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Proposal), global::AElf.Kernel.Proposal.Parser, new[]{ "MultiSigAccount", "Name", "TxnData", "ExpiredTime", "Status", "Proposer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Approved), global::AElf.Kernel.Approved.Parser, new[]{ "ProposalHash", "Approvals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Kernel.Approval), global::AElf.Kernel.Approval.Parser, new[]{ "ProposalHash", "Signature" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProposalStatus {
    [pbr::OriginalName("ToBeDecided")] ToBeDecided = 0,
    [pbr::OriginalName("Decided")] Decided = 1,
    [pbr::OriginalName("Released")] Released = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Authorization : pb::IMessage<Authorization> {
    private static readonly pb::MessageParser<Authorization> _parser = new pb::MessageParser<Authorization>(() => new Authorization());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authorization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorization(Authorization other) : this() {
      multiSigAccount_ = other.multiSigAccount_ != null ? other.multiSigAccount_.Clone() : null;
      executionThreshold_ = other.executionThreshold_;
      proposerThreshold_ = other.proposerThreshold_;
      reviewers_ = other.reviewers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorization Clone() {
      return new Authorization(this);
    }

    /// <summary>Field number for the "MultiSigAccount" field.</summary>
    public const int MultiSigAccountFieldNumber = 1;
    private global::AElf.Common.Address multiSigAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Address MultiSigAccount {
      get { return multiSigAccount_; }
      set {
        multiSigAccount_ = value;
      }
    }

    /// <summary>Field number for the "ExecutionThreshold" field.</summary>
    public const int ExecutionThresholdFieldNumber = 2;
    private uint executionThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExecutionThreshold {
      get { return executionThreshold_; }
      set {
        executionThreshold_ = value;
      }
    }

    /// <summary>Field number for the "ProposerThreshold" field.</summary>
    public const int ProposerThresholdFieldNumber = 3;
    private uint proposerThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProposerThreshold {
      get { return proposerThreshold_; }
      set {
        proposerThreshold_ = value;
      }
    }

    /// <summary>Field number for the "Reviewers" field.</summary>
    public const int ReviewersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Reviewer> _repeated_reviewers_codec
        = pb::FieldCodec.ForMessage(34, global::AElf.Kernel.Reviewer.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Reviewer> reviewers_ = new pbc::RepeatedField<global::AElf.Kernel.Reviewer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Reviewer> Reviewers {
      get { return reviewers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authorization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authorization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MultiSigAccount, other.MultiSigAccount)) return false;
      if (ExecutionThreshold != other.ExecutionThreshold) return false;
      if (ProposerThreshold != other.ProposerThreshold) return false;
      if(!reviewers_.Equals(other.reviewers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (multiSigAccount_ != null) hash ^= MultiSigAccount.GetHashCode();
      if (ExecutionThreshold != 0) hash ^= ExecutionThreshold.GetHashCode();
      if (ProposerThreshold != 0) hash ^= ProposerThreshold.GetHashCode();
      hash ^= reviewers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (multiSigAccount_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MultiSigAccount);
      }
      if (ExecutionThreshold != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ExecutionThreshold);
      }
      if (ProposerThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProposerThreshold);
      }
      reviewers_.WriteTo(output, _repeated_reviewers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (multiSigAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiSigAccount);
      }
      if (ExecutionThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExecutionThreshold);
      }
      if (ProposerThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProposerThreshold);
      }
      size += reviewers_.CalculateSize(_repeated_reviewers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authorization other) {
      if (other == null) {
        return;
      }
      if (other.multiSigAccount_ != null) {
        if (multiSigAccount_ == null) {
          multiSigAccount_ = new global::AElf.Common.Address();
        }
        MultiSigAccount.MergeFrom(other.MultiSigAccount);
      }
      if (other.ExecutionThreshold != 0) {
        ExecutionThreshold = other.ExecutionThreshold;
      }
      if (other.ProposerThreshold != 0) {
        ProposerThreshold = other.ProposerThreshold;
      }
      reviewers_.Add(other.reviewers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (multiSigAccount_ == null) {
              multiSigAccount_ = new global::AElf.Common.Address();
            }
            input.ReadMessage(multiSigAccount_);
            break;
          }
          case 16: {
            ExecutionThreshold = input.ReadUInt32();
            break;
          }
          case 24: {
            ProposerThreshold = input.ReadUInt32();
            break;
          }
          case 34: {
            reviewers_.AddEntriesFrom(input, _repeated_reviewers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Reviewer : pb::IMessage<Reviewer> {
    private static readonly pb::MessageParser<Reviewer> _parser = new pb::MessageParser<Reviewer>(() => new Reviewer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reviewer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reviewer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reviewer(Reviewer other) : this() {
      pubKey_ = other.pubKey_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reviewer Clone() {
      return new Reviewer(this);
    }

    /// <summary>Field number for the "PubKey" field.</summary>
    public const int PubKeyFieldNumber = 1;
    private pb::ByteString pubKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PubKey {
      get { return pubKey_; }
      set {
        pubKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reviewer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reviewer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PubKey != other.PubKey) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PubKey.Length != 0) hash ^= PubKey.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PubKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PubKey);
      }
      if (Weight != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PubKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubKey);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reviewer other) {
      if (other == null) {
        return;
      }
      if (other.PubKey.Length != 0) {
        PubKey = other.PubKey;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PubKey = input.ReadBytes();
            break;
          }
          case 16: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Proposal : pb::IMessage<Proposal> {
    private static readonly pb::MessageParser<Proposal> _parser = new pb::MessageParser<Proposal>(() => new Proposal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Proposal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.AuthReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proposal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proposal(Proposal other) : this() {
      multiSigAccount_ = other.multiSigAccount_ != null ? other.multiSigAccount_.Clone() : null;
      name_ = other.name_;
      txnData_ = other.txnData_;
      expiredTime_ = other.expiredTime_;
      status_ = other.status_;
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proposal Clone() {
      return new Proposal(this);
    }

    /// <summary>Field number for the "MultiSigAccount" field.</summary>
    public const int MultiSigAccountFieldNumber = 1;
    private global::AElf.Common.Address multiSigAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Address MultiSigAccount {
      get { return multiSigAccount_; }
      set {
        multiSigAccount_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TxnData" field.</summary>
    public const int TxnDataFieldNumber = 3;
    private pb::ByteString txnData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TxnData {
      get { return txnData_; }
      set {
        txnData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpiredTime" field.</summary>
    public const int ExpiredTimeFieldNumber = 4;
    private double expiredTime_;
    /// <summary>
    ///in second
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ExpiredTime {
      get { return expiredTime_; }
      set {
        expiredTime_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::AElf.Kernel.ProposalStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.ProposalStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Proposer" field.</summary>
    public const int ProposerFieldNumber = 6;
    private global::AElf.Common.Address proposer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Proposal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Proposal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MultiSigAccount, other.MultiSigAccount)) return false;
      if (Name != other.Name) return false;
      if (TxnData != other.TxnData) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExpiredTime, other.ExpiredTime)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Proposer, other.Proposer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (multiSigAccount_ != null) hash ^= MultiSigAccount.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (TxnData.Length != 0) hash ^= TxnData.GetHashCode();
      if (ExpiredTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExpiredTime);
      if (Status != 0) hash ^= Status.GetHashCode();
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (multiSigAccount_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MultiSigAccount);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (TxnData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(TxnData);
      }
      if (ExpiredTime != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ExpiredTime);
      }
      if (Status != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (proposer_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Proposer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (multiSigAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiSigAccount);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (TxnData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TxnData);
      }
      if (ExpiredTime != 0D) {
        size += 1 + 8;
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Proposal other) {
      if (other == null) {
        return;
      }
      if (other.multiSigAccount_ != null) {
        if (multiSigAccount_ == null) {
          multiSigAccount_ = new global::AElf.Common.Address();
        }
        MultiSigAccount.MergeFrom(other.MultiSigAccount);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.TxnData.Length != 0) {
        TxnData = other.TxnData;
      }
      if (other.ExpiredTime != 0D) {
        ExpiredTime = other.ExpiredTime;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          proposer_ = new global::AElf.Common.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (multiSigAccount_ == null) {
              multiSigAccount_ = new global::AElf.Common.Address();
            }
            input.ReadMessage(multiSigAccount_);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            TxnData = input.ReadBytes();
            break;
          }
          case 33: {
            ExpiredTime = input.ReadDouble();
            break;
          }
          case 40: {
            status_ = (global::AElf.Kernel.ProposalStatus) input.ReadEnum();
            break;
          }
          case 50: {
            if (proposer_ == null) {
              proposer_ = new global::AElf.Common.Address();
            }
            input.ReadMessage(proposer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Approved : pb::IMessage<Approved> {
    private static readonly pb::MessageParser<Approved> _parser = new pb::MessageParser<Approved>(() => new Approved());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Approved> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.AuthReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approved() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approved(Approved other) : this() {
      proposalHash_ = other.proposalHash_ != null ? other.proposalHash_.Clone() : null;
      approvals_ = other.approvals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approved Clone() {
      return new Approved(this);
    }

    /// <summary>Field number for the "ProposalHash" field.</summary>
    public const int ProposalHashFieldNumber = 1;
    private global::AElf.Common.Hash proposalHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash ProposalHash {
      get { return proposalHash_; }
      set {
        proposalHash_ = value;
      }
    }

    /// <summary>Field number for the "Approvals" field.</summary>
    public const int ApprovalsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::AElf.Kernel.Approval> _repeated_approvals_codec
        = pb::FieldCodec.ForMessage(42, global::AElf.Kernel.Approval.Parser);
    private readonly pbc::RepeatedField<global::AElf.Kernel.Approval> approvals_ = new pbc::RepeatedField<global::AElf.Kernel.Approval>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Kernel.Approval> Approvals {
      get { return approvals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Approved);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Approved other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalHash, other.ProposalHash)) return false;
      if(!approvals_.Equals(other.approvals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalHash_ != null) hash ^= ProposalHash.GetHashCode();
      hash ^= approvals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposalHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalHash);
      }
      approvals_.WriteTo(output, _repeated_approvals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalHash);
      }
      size += approvals_.CalculateSize(_repeated_approvals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Approved other) {
      if (other == null) {
        return;
      }
      if (other.proposalHash_ != null) {
        if (proposalHash_ == null) {
          proposalHash_ = new global::AElf.Common.Hash();
        }
        ProposalHash.MergeFrom(other.ProposalHash);
      }
      approvals_.Add(other.approvals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalHash_ == null) {
              proposalHash_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(proposalHash_);
            break;
          }
          case 42: {
            approvals_.AddEntriesFrom(input, _repeated_approvals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Approval : pb::IMessage<Approval> {
    private static readonly pb::MessageParser<Approval> _parser = new pb::MessageParser<Approval>(() => new Approval());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Approval> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Kernel.AuthReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approval() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approval(Approval other) : this() {
      proposalHash_ = other.proposalHash_ != null ? other.proposalHash_.Clone() : null;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Approval Clone() {
      return new Approval(this);
    }

    /// <summary>Field number for the "ProposalHash" field.</summary>
    public const int ProposalHashFieldNumber = 1;
    private global::AElf.Common.Hash proposalHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash ProposalHash {
      get { return proposalHash_; }
      set {
        proposalHash_ = value;
      }
    }

    /// <summary>Field number for the "Signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Approval);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Approval other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalHash, other.ProposalHash)) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalHash_ != null) hash ^= ProposalHash.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposalHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalHash);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalHash);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Approval other) {
      if (other == null) {
        return;
      }
      if (other.proposalHash_ != null) {
        if (proposalHash_ == null) {
          proposalHash_ = new global::AElf.Common.Hash();
        }
        ProposalHash.MergeFrom(other.ProposalHash);
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalHash_ == null) {
              proposalHash_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(proposalHash_);
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
