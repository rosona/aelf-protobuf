// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: headerinfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Miner.Rpc {

  /// <summary>Holder for reflection information generated from headerinfo.proto</summary>
  public static partial class HeaderinfoReflection {

    #region Descriptor
    /// <summary>File descriptor for headerinfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeaderinfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBoZWFkZXJpbmZvLnByb3RvGgxjb21tb24ucHJvdG8aEGNyb3NzY2hhaW4u",
            "cHJvdG8iPgoQUmVxdWVzdEJsb2NrSW5mbxIWCgdDaGFpbklkGAEgASgLMgUu",
            "SGFzaBISCgpOZXh0SGVpZ2h0GAIgASgEIlUKGlJlc3BvbnNlU2lkZUNoYWlu",
            "QmxvY2tJbmZvEiYKCUJsb2NrSW5mbxgBIAEoCzITLlNpZGVDaGFpbkJsb2Nr",
            "SW5mbxIPCgdTdWNjZXNzGAIgASgIIlkKHFJlc3BvbnNlUGFyZW50Q2hhaW5C",
            "bG9ja0luZm8SKAoJQmxvY2tJbmZvGAEgASgLMhUuUGFyZW50Q2hhaW5CbG9j",
            "a0luZm8SDwoHU3VjY2VzcxgCIAEoCCJcChJNZXJrbGVQcm9vZk1lc3NhZ2US",
            "HwoQQmxvY2tNZXJrbGVQcm9vZhgBIAMoCzIFLkhhc2gSJQoWVHJhbnNhY3Rp",
            "b25NZXJrbGVQcm9vZhgCIAMoCzIFLkhhc2giSAoZVmVyaWZpY2F0aW9uTmVl",
            "ZGVkTWVzc2FnZRIWCgdDaGFpbklkGAEgASgLMgUuSGFzaBITCgtCbG9ja0hl",
            "aWdodBgCIAEoBDKxAQoVU2lkZUNoYWluQmxvY2tJbmZvUnBjEkwKFEluZGV4",
            "RHVwbGV4U3RyZWFtaW5nEhEuUmVxdWVzdEJsb2NrSW5mbxobLlJlc3BvbnNl",
            "U2lkZUNoYWluQmxvY2tJbmZvIgAoATABEkoKFEluZGV4U2VydmVyU3RyZWFt",
            "aW5nEhEuUmVxdWVzdEJsb2NrSW5mbxobLlJlc3BvbnNlU2lkZUNoYWluQmxv",
            "Y2tJbmZvIgAwATK5AQoXUGFyZW50Q2hhaW5CbG9ja0luZm9ScGMSTwoVUmVj",
            "b3JkRHVwbGV4U3RyZWFtaW5nEhEuUmVxdWVzdEJsb2NrSW5mbxodLlJlc3Bv",
            "bnNlUGFyZW50Q2hhaW5CbG9ja0luZm8iACgBMAESTQoVUmVjb3JkU2VydmVy",
            "U3RyZWFtaW5nEhEuUmVxdWVzdEJsb2NrSW5mbxodLlJlc3BvbnNlUGFyZW50",
            "Q2hhaW5CbG9ja0luZm8iADABMloKEk1lcmtsZVByb29mSW5mb1JwYxJECg9N",
            "ZXJrbGVQcm9vZkluZm8SGi5WZXJpZmljYXRpb25OZWVkZWRNZXNzYWdlGhMu",
            "TWVya2xlUHJvb2ZNZXNzYWdlIgBCEaoCDkFFbGYuTWluZXIuUnBjYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Common.CommonReflection.Descriptor, global::AElf.Kernel.CrosschainReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Miner.Rpc.RequestBlockInfo), global::AElf.Miner.Rpc.RequestBlockInfo.Parser, new[]{ "ChainId", "NextHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Miner.Rpc.ResponseSideChainBlockInfo), global::AElf.Miner.Rpc.ResponseSideChainBlockInfo.Parser, new[]{ "BlockInfo", "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Miner.Rpc.ResponseParentChainBlockInfo), global::AElf.Miner.Rpc.ResponseParentChainBlockInfo.Parser, new[]{ "BlockInfo", "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Miner.Rpc.MerkleProofMessage), global::AElf.Miner.Rpc.MerkleProofMessage.Parser, new[]{ "BlockMerkleProof", "TransactionMerkleProof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Miner.Rpc.VerificationNeededMessage), global::AElf.Miner.Rpc.VerificationNeededMessage.Parser, new[]{ "ChainId", "BlockHeight" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestBlockInfo : pb::IMessage<RequestBlockInfo> {
    private static readonly pb::MessageParser<RequestBlockInfo> _parser = new pb::MessageParser<RequestBlockInfo>(() => new RequestBlockInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestBlockInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Miner.Rpc.HeaderinfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBlockInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBlockInfo(RequestBlockInfo other) : this() {
      chainId_ = other.chainId_ != null ? other.chainId_.Clone() : null;
      nextHeight_ = other.nextHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBlockInfo Clone() {
      return new RequestBlockInfo(this);
    }

    /// <summary>Field number for the "ChainId" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private global::AElf.Common.Hash chainId_;
    /// <summary>
    /// parent(own) chain id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "NextHeight" field.</summary>
    public const int NextHeightFieldNumber = 2;
    private ulong nextHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NextHeight {
      get { return nextHeight_; }
      set {
        nextHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestBlockInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestBlockInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChainId, other.ChainId)) return false;
      if (NextHeight != other.NextHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chainId_ != null) hash ^= ChainId.GetHashCode();
      if (NextHeight != 0UL) hash ^= NextHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chainId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChainId);
      }
      if (NextHeight != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(NextHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chainId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChainId);
      }
      if (NextHeight != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NextHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestBlockInfo other) {
      if (other == null) {
        return;
      }
      if (other.chainId_ != null) {
        if (chainId_ == null) {
          chainId_ = new global::AElf.Common.Hash();
        }
        ChainId.MergeFrom(other.ChainId);
      }
      if (other.NextHeight != 0UL) {
        NextHeight = other.NextHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chainId_ == null) {
              chainId_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(chainId_);
            break;
          }
          case 16: {
            NextHeight = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseSideChainBlockInfo : pb::IMessage<ResponseSideChainBlockInfo> {
    private static readonly pb::MessageParser<ResponseSideChainBlockInfo> _parser = new pb::MessageParser<ResponseSideChainBlockInfo>(() => new ResponseSideChainBlockInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseSideChainBlockInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Miner.Rpc.HeaderinfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSideChainBlockInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSideChainBlockInfo(ResponseSideChainBlockInfo other) : this() {
      blockInfo_ = other.blockInfo_ != null ? other.blockInfo_.Clone() : null;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSideChainBlockInfo Clone() {
      return new ResponseSideChainBlockInfo(this);
    }

    /// <summary>Field number for the "BlockInfo" field.</summary>
    public const int BlockInfoFieldNumber = 1;
    private global::AElf.Kernel.SideChainBlockInfo blockInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.SideChainBlockInfo BlockInfo {
      get { return blockInfo_; }
      set {
        blockInfo_ = value;
      }
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseSideChainBlockInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseSideChainBlockInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockInfo, other.BlockInfo)) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockInfo_ != null) hash ^= BlockInfo.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockInfo);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockInfo);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseSideChainBlockInfo other) {
      if (other == null) {
        return;
      }
      if (other.blockInfo_ != null) {
        if (blockInfo_ == null) {
          blockInfo_ = new global::AElf.Kernel.SideChainBlockInfo();
        }
        BlockInfo.MergeFrom(other.BlockInfo);
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockInfo_ == null) {
              blockInfo_ = new global::AElf.Kernel.SideChainBlockInfo();
            }
            input.ReadMessage(blockInfo_);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseParentChainBlockInfo : pb::IMessage<ResponseParentChainBlockInfo> {
    private static readonly pb::MessageParser<ResponseParentChainBlockInfo> _parser = new pb::MessageParser<ResponseParentChainBlockInfo>(() => new ResponseParentChainBlockInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseParentChainBlockInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Miner.Rpc.HeaderinfoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseParentChainBlockInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseParentChainBlockInfo(ResponseParentChainBlockInfo other) : this() {
      blockInfo_ = other.blockInfo_ != null ? other.blockInfo_.Clone() : null;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseParentChainBlockInfo Clone() {
      return new ResponseParentChainBlockInfo(this);
    }

    /// <summary>Field number for the "BlockInfo" field.</summary>
    public const int BlockInfoFieldNumber = 1;
    private global::AElf.Kernel.ParentChainBlockInfo blockInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Kernel.ParentChainBlockInfo BlockInfo {
      get { return blockInfo_; }
      set {
        blockInfo_ = value;
      }
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseParentChainBlockInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseParentChainBlockInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockInfo, other.BlockInfo)) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockInfo_ != null) hash ^= BlockInfo.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockInfo);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockInfo);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseParentChainBlockInfo other) {
      if (other == null) {
        return;
      }
      if (other.blockInfo_ != null) {
        if (blockInfo_ == null) {
          blockInfo_ = new global::AElf.Kernel.ParentChainBlockInfo();
        }
        BlockInfo.MergeFrom(other.BlockInfo);
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockInfo_ == null) {
              blockInfo_ = new global::AElf.Kernel.ParentChainBlockInfo();
            }
            input.ReadMessage(blockInfo_);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MerkleProofMessage : pb::IMessage<MerkleProofMessage> {
    private static readonly pb::MessageParser<MerkleProofMessage> _parser = new pb::MessageParser<MerkleProofMessage>(() => new MerkleProofMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerkleProofMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Miner.Rpc.HeaderinfoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerkleProofMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerkleProofMessage(MerkleProofMessage other) : this() {
      blockMerkleProof_ = other.blockMerkleProof_.Clone();
      transactionMerkleProof_ = other.transactionMerkleProof_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerkleProofMessage Clone() {
      return new MerkleProofMessage(this);
    }

    /// <summary>Field number for the "BlockMerkleProof" field.</summary>
    public const int BlockMerkleProofFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Common.Hash> _repeated_blockMerkleProof_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Common.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Common.Hash> blockMerkleProof_ = new pbc::RepeatedField<global::AElf.Common.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Common.Hash> BlockMerkleProof {
      get { return blockMerkleProof_; }
    }

    /// <summary>Field number for the "TransactionMerkleProof" field.</summary>
    public const int TransactionMerkleProofFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Common.Hash> _repeated_transactionMerkleProof_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Common.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Common.Hash> transactionMerkleProof_ = new pbc::RepeatedField<global::AElf.Common.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Common.Hash> TransactionMerkleProof {
      get { return transactionMerkleProof_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerkleProofMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerkleProofMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockMerkleProof_.Equals(other.blockMerkleProof_)) return false;
      if(!transactionMerkleProof_.Equals(other.transactionMerkleProof_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockMerkleProof_.GetHashCode();
      hash ^= transactionMerkleProof_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blockMerkleProof_.WriteTo(output, _repeated_blockMerkleProof_codec);
      transactionMerkleProof_.WriteTo(output, _repeated_transactionMerkleProof_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockMerkleProof_.CalculateSize(_repeated_blockMerkleProof_codec);
      size += transactionMerkleProof_.CalculateSize(_repeated_transactionMerkleProof_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerkleProofMessage other) {
      if (other == null) {
        return;
      }
      blockMerkleProof_.Add(other.blockMerkleProof_);
      transactionMerkleProof_.Add(other.transactionMerkleProof_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blockMerkleProof_.AddEntriesFrom(input, _repeated_blockMerkleProof_codec);
            break;
          }
          case 18: {
            transactionMerkleProof_.AddEntriesFrom(input, _repeated_transactionMerkleProof_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerificationNeededMessage : pb::IMessage<VerificationNeededMessage> {
    private static readonly pb::MessageParser<VerificationNeededMessage> _parser = new pb::MessageParser<VerificationNeededMessage>(() => new VerificationNeededMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationNeededMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Miner.Rpc.HeaderinfoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationNeededMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationNeededMessage(VerificationNeededMessage other) : this() {
      chainId_ = other.chainId_ != null ? other.chainId_.Clone() : null;
      blockHeight_ = other.blockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationNeededMessage Clone() {
      return new VerificationNeededMessage(this);
    }

    /// <summary>Field number for the "ChainId" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private global::AElf.Common.Hash chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "BlockHeight" field.</summary>
    public const int BlockHeightFieldNumber = 2;
    private ulong blockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationNeededMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationNeededMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChainId, other.ChainId)) return false;
      if (BlockHeight != other.BlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chainId_ != null) hash ^= ChainId.GetHashCode();
      if (BlockHeight != 0UL) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chainId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChainId);
      }
      if (BlockHeight != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chainId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChainId);
      }
      if (BlockHeight != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationNeededMessage other) {
      if (other == null) {
        return;
      }
      if (other.chainId_ != null) {
        if (chainId_ == null) {
          chainId_ = new global::AElf.Common.Hash();
        }
        ChainId.MergeFrom(other.ChainId);
      }
      if (other.BlockHeight != 0UL) {
        BlockHeight = other.BlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chainId_ == null) {
              chainId_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(chainId_);
            break;
          }
          case 16: {
            BlockHeight = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
