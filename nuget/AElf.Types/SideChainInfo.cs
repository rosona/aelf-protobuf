// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: side-chain-info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.CrossChain {

  /// <summary>Holder for reflection information generated from side-chain-info.proto</summary>
  public static partial class SideChainInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for side-chain-info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SideChainInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVzaWRlLWNoYWluLWluZm8ucHJvdG8aDGNvbW1vbi5wcm90byKYAgoNU2lk",
            "ZUNoYWluSW5mbxIUCgVPd25lchgBIAEoCzIFLkhhc2gSEwoLU2VyaWFsTnVt",
            "ZXIYAiABKAQSFgoHQ2hhaW5JZBgDIAEoCzIFLkhhc2gSLgoGU3RhdHVzGAQg",
            "ASgOMh4uU2lkZUNoYWluSW5mby5TaWRlQ2hhaW5TdGF0dXMSHAoNTG9ja2Vk",
            "QWRkcmVzcxgFIAEoCzIFLkhhc2gSEwoLTG9ja2VkVG9rZW4YBiABKAQSFgoO",
            "Q3JlYXRpb25IZWlnaHQYByABKAQiSQoPU2lkZUNoYWluU3RhdHVzEg0KCVVu",
            "ZGVmaW5lZBAAEgsKB1BlbmRpbmcQARIKCgZBY3RpdmUQAhIOCgpUZXJtaW5h",
            "dGVkEANCHKoCGUFFbGYuQ29udHJhY3RzLkNyb3NzQ2hhaW5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainInfo), global::AElf.Contracts.CrossChain.SideChainInfo.Parser, new[]{ "Owner", "SerialNumer", "ChainId", "Status", "LockedAddress", "LockedToken", "CreationHeight" }, null, new[]{ typeof(global::AElf.Contracts.CrossChain.SideChainInfo.Types.SideChainStatus) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SideChainInfo : pb::IMessage<SideChainInfo> {
    private static readonly pb::MessageParser<SideChainInfo> _parser = new pb::MessageParser<SideChainInfo>(() => new SideChainInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.SideChainInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainInfo(SideChainInfo other) : this() {
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      serialNumer_ = other.serialNumer_;
      chainId_ = other.chainId_ != null ? other.chainId_.Clone() : null;
      status_ = other.status_;
      lockedAddress_ = other.lockedAddress_ != null ? other.lockedAddress_.Clone() : null;
      lockedToken_ = other.lockedToken_;
      creationHeight_ = other.creationHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainInfo Clone() {
      return new SideChainInfo(this);
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private global::AElf.Common.Hash owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "SerialNumer" field.</summary>
    public const int SerialNumerFieldNumber = 2;
    private ulong serialNumer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SerialNumer {
      get { return serialNumer_; }
      set {
        serialNumer_ = value;
      }
    }

    /// <summary>Field number for the "ChainId" field.</summary>
    public const int ChainIdFieldNumber = 3;
    private global::AElf.Common.Hash chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::AElf.Contracts.CrossChain.SideChainInfo.Types.SideChainStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.CrossChain.SideChainInfo.Types.SideChainStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "LockedAddress" field.</summary>
    public const int LockedAddressFieldNumber = 5;
    private global::AElf.Common.Hash lockedAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Common.Hash LockedAddress {
      get { return lockedAddress_; }
      set {
        lockedAddress_ = value;
      }
    }

    /// <summary>Field number for the "LockedToken" field.</summary>
    public const int LockedTokenFieldNumber = 6;
    private ulong lockedToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LockedToken {
      get { return lockedToken_; }
      set {
        lockedToken_ = value;
      }
    }

    /// <summary>Field number for the "CreationHeight" field.</summary>
    public const int CreationHeightFieldNumber = 7;
    private ulong creationHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreationHeight {
      get { return creationHeight_; }
      set {
        creationHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Owner, other.Owner)) return false;
      if (SerialNumer != other.SerialNumer) return false;
      if (!object.Equals(ChainId, other.ChainId)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LockedAddress, other.LockedAddress)) return false;
      if (LockedToken != other.LockedToken) return false;
      if (CreationHeight != other.CreationHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (SerialNumer != 0UL) hash ^= SerialNumer.GetHashCode();
      if (chainId_ != null) hash ^= ChainId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (lockedAddress_ != null) hash ^= LockedAddress.GetHashCode();
      if (LockedToken != 0UL) hash ^= LockedToken.GetHashCode();
      if (CreationHeight != 0UL) hash ^= CreationHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (owner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Owner);
      }
      if (SerialNumer != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SerialNumer);
      }
      if (chainId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ChainId);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (lockedAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LockedAddress);
      }
      if (LockedToken != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(LockedToken);
      }
      if (CreationHeight != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(CreationHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (SerialNumer != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SerialNumer);
      }
      if (chainId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChainId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (lockedAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LockedAddress);
      }
      if (LockedToken != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LockedToken);
      }
      if (CreationHeight != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreationHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainInfo other) {
      if (other == null) {
        return;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          owner_ = new global::AElf.Common.Hash();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.SerialNumer != 0UL) {
        SerialNumer = other.SerialNumer;
      }
      if (other.chainId_ != null) {
        if (chainId_ == null) {
          chainId_ = new global::AElf.Common.Hash();
        }
        ChainId.MergeFrom(other.ChainId);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.lockedAddress_ != null) {
        if (lockedAddress_ == null) {
          lockedAddress_ = new global::AElf.Common.Hash();
        }
        LockedAddress.MergeFrom(other.LockedAddress);
      }
      if (other.LockedToken != 0UL) {
        LockedToken = other.LockedToken;
      }
      if (other.CreationHeight != 0UL) {
        CreationHeight = other.CreationHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (owner_ == null) {
              owner_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(owner_);
            break;
          }
          case 16: {
            SerialNumer = input.ReadUInt64();
            break;
          }
          case 26: {
            if (chainId_ == null) {
              chainId_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(chainId_);
            break;
          }
          case 32: {
            status_ = (global::AElf.Contracts.CrossChain.SideChainInfo.Types.SideChainStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (lockedAddress_ == null) {
              lockedAddress_ = new global::AElf.Common.Hash();
            }
            input.ReadMessage(lockedAddress_);
            break;
          }
          case 48: {
            LockedToken = input.ReadUInt64();
            break;
          }
          case 56: {
            CreationHeight = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SideChainInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SideChainStatus {
        [pbr::OriginalName("Undefined")] Undefined = 0,
        [pbr::OriginalName("Pending")] Pending = 1,
        [pbr::OriginalName("Active")] Active = 2,
        [pbr::OriginalName("Terminated")] Terminated = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
